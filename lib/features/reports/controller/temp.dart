// import 'dart:html' as html;
// import 'dart:typed_data';

// import 'package:intl/intl.dart';
// import 'package:pdf/pdf.dart';
// import 'package:pdf/widgets.dart' as pw;

// import '../../user/models/user_models.dart';
// import '../models/quiz_score_model.dart';

// class ReportController {
//   final PdfColor _primaryColor = PdfColors.blueAccent;
//   final PdfColor _secondaryColor = PdfColors.lightBlue300;
//   final PdfColor _accentColor = PdfColors.amber600;

//   Future<void> generateStudentPerformanceReport({
//     required UserModel student,
//     required List<QuizScoreModel> quizScores,
//   }) async {
//     final limitedQuizScores = quizScores.take(20).toList();
//     final metrics = _calculatePerformanceMetrics(limitedQuizScores);

//     final pdf = pw.Document(
//       theme: pw.ThemeData(
//         primaryColor: _primaryColor,
//         defaultTextStyle: pw.TextStyle(
//           fontSize: 12,
//           color: PdfColors.grey800,
//         ),
//       ),
//     );

//     pdf.addPage(
//       pw.MultiPage(
//         pageFormat: PdfPageFormat.a4,
//         margin: const pw.EdgeInsets.all(40),
//         build: (context) => [
//           _buildHeader(student),
//           _buildStudentProfile(student),
//           _buildPerformanceHighlights(metrics),
//           _buildRadialGauges(metrics),
//           _buildQuizPerformanceTable(limitedQuizScores),
//           _buildCategoryPerformance(limitedQuizScores),
//           _buildRecommendationsSection(metrics),
//         ],
//         footer: _buildFooter,
//       ),
//     );

//     final Uint8List pdfBytes = await pdf.save();
//     _downloadPDF(pdfBytes);
//   }
//     pw.Widget _buildFooter(pw.Context context) {
//     return pw.Container(
//       margin: const pw.EdgeInsets.only(top: 24),
//       padding: const pw.EdgeInsets.symmetric(vertical: 12),
//       decoration: pw.BoxDecoration(
//         border: pw.Border(top: pw.BorderSide(color: PdfColors.grey200)),
//       ),
//       child: pw.Row(
//         mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
//         children: [
//           pw.Text(
//             'Generated by Quiz Master Pro',
//             style: pw.TextStyle(
//               color: PdfColors.grey600,
//               fontSize: 10,
//             ),
//           ),
//           pw.Text(
//             'Page ${context.pageNumber} of ${context.pagesCount}',
//             style: pw.TextStyle(
//               color: PdfColors.grey600,
//               fontSize: 10,
//             ),
//           ),
//         ],
//       ),
//     );
//   }

//   pw.Widget _buildHeader(UserModel student) {
//     return pw.Container(
//       decoration: pw.BoxDecoration(
//         color: _primaryColor,
//         borderRadius: const pw.BorderRadius.all(pw.Radius.circular(12)),
//       ),
//       padding: const pw.EdgeInsets.all(24),
//       child: pw.Row(
//         mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
//         children: [
//           pw.Column(
//             crossAxisAlignment: pw.CrossAxisAlignment.start,
//             children: [
//               pw.Text(
//                 'STUDENT PERFORMANCE REPORT',
//                 style: pw.TextStyle(
//                   color: PdfColors.white,
//                   fontSize: 20,
//                   fontWeight: pw.FontWeight.bold,
//                 ),
//               ),
//               pw.SizedBox(height: 8),
//               pw.Text(
//                 DateFormat('MMMM dd, yyyy').format(DateTime.now()),
//                 style: pw.TextStyle(
//                   color: PdfColors.white,
//                   fontSize: 12,
//                 ),
//               ),
//             ],
//           ),
//           pw.Container(
//             width: 60,
//             height: 60,
//             decoration: pw.BoxDecoration(
//               color: PdfColors.white,
//               shape: pw.BoxShape.circle,
//             ),
//             child: pw.Center(
//               child: pw.Text(
//                 student.name.substring(0, 1).toUpperCase(),
//                 style: pw.TextStyle(
//                   fontSize: 24,
//                   color: _primaryColor,
//                   fontWeight: pw.FontWeight.bold,
//                 ),
//               ),
//             ),
//           ),
//         ],
//       ),
//     );
//   }

//   pw.Widget _buildStudentProfile(UserModel student) {
//     return pw.Container(
//       margin: const pw.EdgeInsets.only(top: 24),
//       child: pw.Column(
//         crossAxisAlignment: pw.CrossAxisAlignment.start,
//         children: [
//           pw.Text(
//             'Student Profile',
//             style: pw.TextStyle(
//               fontSize: 18,
//               color: _primaryColor,
//               fontWeight: pw.FontWeight.bold,
//             ),
//           ),
//           pw.SizedBox(height: 12),
//           pw.Row(
//             mainAxisAlignment: pw.MainAxisAlignment.spaceAround,
//             children: [
//               _buildProfileItem('Grade', student.grade ?? 'N/A'),
//               _buildProfileItem('School', student.schoolName ?? 'N/A'),
//               _buildProfileItem('Total Quizzes', quizScores.length.toString()),
//             ],
//           ),
//         ],
//       ),
//     );
//   }

//   pw.Widget _buildProfileItem(String title, String value) {
//     return pw.Column(
//       children: [
//         pw.Text(
//           title,
//           style: pw.TextStyle(
//             color: PdfColors.grey600,
//             fontSize: 12,
//           ),
//         ),
//         pw.SizedBox(height: 4),
//         pw.Text(
//           value,
//           style: pw.TextStyle(
//             fontSize: 16,
//             fontWeight: pw.FontWeight.bold,
//             color: _primaryColor,
//           ),
//         ),
//       ],
//     );
//   }

//   pw.Widget _buildPerformanceHighlights(PerformanceMetrics metrics) {
//     return pw.Container(
//       margin: const pw.EdgeInsets.only(top: 24),
//       child: pw.Column(
//         crossAxisAlignment: pw.CrossAxisAlignment.start,
//         children: [
//           pw.Text(
//             'Performance Highlights',
//             style: pw.TextStyle(
//               fontSize: 18,
//               color: _primaryColor,
//               fontWeight: pw.FontWeight.bold,
//             ),
//           ),
//           pw.SizedBox(height: 16),
//           pw.Row(
//             mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
//             children: [
//               _buildHighlightCard(
//                 'Overall Score',
//                 '${metrics.overallScore.toStringAsFixed(1)}%',
//                 Icons.trending_up,
//               ),
//               _buildHighlightCard(
//                 'Accuracy',
//                 '${metrics.accuracy.toStringAsFixed(1)}%',
//                 Icons.target,
//               ),
//               _buildHighlightCard(
//                 'Avg. Time',
//                 '${metrics.averageTimeTaken.toStringAsFixed(1)}s',
//                 Icons.timer,
//               ),
//             ],
//           ),
//         ],
//       ),
//     );
//   }

//   pw.Widget _buildHighlightCard(String title, String value, IconData icon) {
//     return pw.Container(
//       width: 150,
//       padding: const pw.EdgeInsets.all(16),
//       decoration: pw.BoxDecoration(
//         color: PdfColors.grey50,
//         borderRadius: const pw.BorderRadius.all(pw.Radius.circular(8)),
//         border: pw.Border.all(color: PdfColors.grey200),
//       ),
//       child: pw.Column(
//         children: [
//           pw.Icon(icon, size: 24, color: _secondaryColor),
//           pw.SizedBox(height: 8),
//           pw.Text(
//             title,
//             style: pw.TextStyle(
//               color: PdfColors.grey600,
//               fontSize: 12,
//             ),
//           ),
//           pw.SizedBox(height: 4),
//           pw.Text(
//             value,
//             style: pw.TextStyle(
//               fontSize: 18,
//               fontWeight: pw.FontWeight.bold,
//               color: _primaryColor,
//             ),
//           ),
//         ],
//       ),
//     );
//   }

//   pw.Widget _buildRadialGauges(PerformanceMetrics metrics) {
//     return pw.Container(
//       margin: const pw.EdgeInsets.only(top: 24),
//       child: pw.Row(
//         mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
//         children: [
//           _buildRadialGauge(
//             'Overall Progress',
//             metrics.overallScore,
//             _primaryColor,
//           ),
//           _buildRadialGauge(
//             'Accuracy Rate',
//             metrics.accuracy,
//             _accentColor,
//           ),
//         ],
//       ),
//     );
//   }

//   pw.Widget _buildRadialGauge(String title, double value, PdfColor color) {
//     return pw.Container(
//       width: 200,
//       height: 200,
//       child: pw.Stack(
//         alignment: pw.Alignment.center,
//         children: [
//           pw.Container(
//             width: 180,
//             height: 180,
//             decoration: pw.BoxDecoration(
//               shape: pw.BoxShape.circle,
//               color: PdfColors.grey50,
//             ),
//           ),
//           pw.Transform.rotate(
//             angle: -1.5708, // -90 degrees in radians
//             child: pw.SizedBox(
//               width: 160,
//               height: 160,
//               child: pw.CircularProgressIndicator(
//                 value: value / 100,
//                 backgroundColor: PdfColors.grey200,
//                 color: color,
//                 strokeWidth: 12,
//               ),
//             ),
//           ),
//           pw.Column(
//             mainAxisSize: pw.MainAxisSize.min,
//             children: [
//               pw.Text(
//                 '${value.toStringAsFixed(1)}%',
//                 style: pw.TextStyle(
//                   fontSize: 24,
//                   fontWeight: pw.FontWeight.bold,
//                   color: color,
//                 ),
//               ),
//               pw.SizedBox(height: 4),
//               pw.Text(
//                 title,
//                 style: pw.TextStyle(
//                   fontSize: 12,
//                   color: PdfColors.grey600,
//                 ),
//               ),
//             ],
//           ),
//         ],
//       ),
//     );
//   }

//   // Add other sections (_buildQuizPerformanceTable, _buildCategoryPerformance, etc.)
//   // with similar modern styling approaches

//   pw.Widget _buildFooter(pw.Context context) {
//     return pw.Container(
//       margin: const pw.EdgeInsets.only(top: 24),
//       padding: const pw.EdgeInsets.symmetric(vertical: 12),
//       decoration: pw.BoxDecoration(
//         border: pw.Border(top: pw.BorderSide(color: PdfColors.grey200)),
//       ),
//       child: pw.Row(
//         mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
//         children: [
//           pw.Text(
//             'Generated by Quiz Master Pro',
//             style: pw.TextStyle(
//               color: PdfColors.grey600,
//               fontSize: 10,
//             ),
//           ),
//           pw.Text(
//             'Page ${context.pageNumber} of ${context.pagesCount}',
//             style: pw.TextStyle(
//               color: PdfColors.grey600,
//               fontSize: 10,
//             ),
//           ),
//         ],
//       ),
//     );
//   }

//   // Keep existing helper methods (_calculatePerformanceMetrics, etc.)
//   // Add remaining UI components with similar modern styling
// }
